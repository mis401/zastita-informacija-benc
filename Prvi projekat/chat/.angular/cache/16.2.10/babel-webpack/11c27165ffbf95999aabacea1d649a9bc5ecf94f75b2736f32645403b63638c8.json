{"ast":null,"code":"export class RC4 {\n  constructor() {\n    this.S = null;\n  }\n  encrypt(message) {\n    if (!this.S) {\n      this.S = this.KSA(import.meta.env.NG_APP_SECRET);\n    }\n    console.log(`Pre PRGA S je ${this.S}`);\n    const coded = this.PRGA(message);\n    return coded;\n  }\n  KSA(key) {\n    console.log(`Radim KSA`);\n    let S = new Uint8Array(256);\n    for (let i = 0; i < 256; i++) {\n      S[i] = i;\n    }\n    let j = 0;\n    for (let i = 0; i < 256; i++) {\n      j = (j + S[i] + key.charCodeAt(i % key.length)) % 256;\n      let tmp = new Uint8Array(1);\n      tmp[0] = S[i];\n      S[i] = S[j];\n      S[j] = tmp[0];\n    }\n    console.log(`Na kraju KSA S je: ${S}`);\n    return S;\n  }\n  PRGA(message) {\n    let i = 0;\n    let j = 0;\n    if (!this.S) {\n      this.S = this.KSA(import.meta.env.NG_APP_SECRET);\n    }\n    let cipher = new Uint8Array(message.length);\n    let messageArray = message.split('');\n    for (let n = 0; n < message.length; n++) {\n      i = (i + 1) % 256;\n      j = (j + this.S[i]) % 256;\n      let tmp = new Uint8Array(1);\n      tmp[0] = this.S[i];\n      this.S[i] = this.S[j];\n      this.S[j] = tmp[0];\n      let k = this.S[(this.S[i] + this.S[j]) % 256];\n      cipher[i] = messageArray[n].charCodeAt(0) ^ k;\n    }\n    let coded = cipher.join('');\n    let hexMessage = messageArray.map(char => {\n      String.fromCharCode(0);\n    }).join('');\n    console.log(`coded ${coded}`);\n    return coded;\n  }\n}","map":{"version":3,"names":["RC4","constructor","S","encrypt","message","KSA","import","meta","env","NG_APP_SECRET","console","log","coded","PRGA","key","Uint8Array","i","j","charCodeAt","length","tmp","cipher","messageArray","split","n","k","join","hexMessage","map","char","String","fromCharCode"],"sources":["C:\\Users\\MihajloBencun\\Desktop\\Faks\\Zastita informacija\\Prvi projekat\\chat\\src\\app\\chat\\RC4.ts"],"sourcesContent":["export class RC4 {\r\n    private S: Uint8Array | null;\r\n    constructor() {\r\n        this.S = null;\r\n    }\r\n    public encrypt(message: string){\r\n        if (!this.S) {\r\n            this.S = this.KSA(import.meta.env.NG_APP_SECRET);\r\n        }\r\n        console.log(`Pre PRGA S je ${this.S}`);\r\n        const coded = this.PRGA(message);\r\n        return coded;\r\n    }\r\n    private KSA(key: string) {\r\n        console.log(`Radim KSA`);\r\n        let S = new Uint8Array(256);\r\n        for (let i = 0; i < 256; i++) {\r\n            S[i] = i;\r\n        }\r\n        let j = 0;\r\n        for (let i = 0; i < 256; i++) {\r\n            j = (j + S[i] + key.charCodeAt(i % key.length)) % 256;\r\n            let tmp = new Uint8Array(1);\r\n            tmp[0] = S[i]\r\n            S[i] = S[j];\r\n            S[j] = tmp[0];\r\n        }\r\n        console.log(`Na kraju KSA S je: ${S}`);\r\n        return S;\r\n    }\r\n    private PRGA(message: string) {\r\n        let i = 0;\r\n        let j = 0;\r\n        if (!this.S) {\r\n            this.S = this.KSA(import.meta.env.NG_APP_SECRET);\r\n        }\r\n        let cipher = new Uint8Array(message.length);\r\n        let messageArray = message.split('');\r\n        for (let n = 0; n < message.length; n++) {\r\n            i = (i + 1) % 256;\r\n            j = (j + this.S[i]) % 256;\r\n            let tmp = new Uint8Array(1);\r\n            tmp[0] = this.S[i];\r\n            this.S[i] = this.S[j];\r\n            this.S[j] = tmp[0];\r\n            let k = this.S[(this.S[i] + this.S[j]) % 256];\r\n            cipher[i] = messageArray[n].charCodeAt(0) ^ k;\r\n        }\r\n        let coded = cipher.join('');\r\n        let hexMessage = messageArray.map((char) => {String.fromCharCode(0)}).join('');\r\n        console.log(`coded ${coded}`);\r\n        return coded;\r\n    }\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}