{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { initialUserState } from \"./user.state\";\nimport { AddUsername, ChangeEncryptionType } from \"./user.actions\";\nimport { v4 as uuid } from 'uuid';\nexport const userReducer = createReducer(initialUserState, on(AddUsername, (state, {\n  username\n}) => ({\n  ...state,\n  username: username,\n  id: uuid()\n}), on(ChangeEncryptionType, (state, {\n  encryptionType\n}) => ({\n  ...state,\n  encryptionType: encryptionType\n}))));","map":{"version":3,"names":["createReducer","on","initialUserState","AddUsername","ChangeEncryptionType","v4","uuid","userReducer","state","username","id","encryptionType"],"sources":["C:\\Users\\MihajloBencun\\Desktop\\Faks\\Zastita informacija\\Prvi projekat\\zastita-informacija-benc\\Prvi projekat\\chat\\src\\app\\store\\user.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { initialUserState } from \"./user.state\";\r\nimport { AddUsername, ChangeEncryptionType } from \"./user.actions\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const userReducer = createReducer(\r\n    initialUserState,\r\n    on(AddUsername, (state, { username }) => ({ ...state, username: username, id: uuid() }),\r\n    on(ChangeEncryptionType, (state, { encryptionType }) => ({ ...state, encryptionType: encryptionType }))\r\n));"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC/C,SAASC,gBAAgB,QAAQ,cAAc;AAC/C,SAASC,WAAW,EAAEC,oBAAoB,QAAQ,gBAAgB;AAClE,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AAEjC,OAAO,MAAMC,WAAW,GAAGP,aAAa,CACpCE,gBAAgB,EAChBD,EAAE,CAACE,WAAW,EAAE,CAACK,KAAK,EAAE;EAAEC;AAAQ,CAAE,MAAM;EAAE,GAAGD,KAAK;EAAEC,QAAQ,EAAEA,QAAQ;EAAEC,EAAE,EAAEJ,IAAI;AAAE,CAAE,CAAC,EACvFL,EAAE,CAACG,oBAAoB,EAAE,CAACI,KAAK,EAAE;EAAEG;AAAc,CAAE,MAAM;EAAE,GAAGH,KAAK;EAAEG,cAAc,EAAEA;AAAc,CAAE,CAAC,CAAC,CAC1G,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}