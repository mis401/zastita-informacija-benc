{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"scrollable\"];\nfunction ChatComponent_div_6_div_1_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const m_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(m_r2.crypto);\n  }\n}\nfunction ChatComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"p\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ChatComponent_div_6_div_1_p_4_Template, 2, 1, \"p\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const m_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(m_r2.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.toggleEncryption);\n  }\n}\nfunction ChatComponent_div_6_ng_template_2_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const m_r2 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(m_r2.crypto);\n  }\n}\nfunction ChatComponent_div_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 14)(2, \"p\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 15);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ChatComponent_div_6_ng_template_2_p_6_Template, 2, 1, \"p\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const m_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(m_r2.senderName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(m_r2.text);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.toggleEncryption);\n  }\n}\nfunction ChatComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ChatComponent_div_6_div_1_Template, 5, 2, \"div\", 11);\n    i0.ɵɵtemplate(2, ChatComponent_div_6_ng_template_2_Template, 7, 3, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const m_r2 = ctx.$implicit;\n    const _r4 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", m_r2.owner == true)(\"ngIfElse\", _r4);\n  }\n}\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(service) {\n      this.service = service;\n      this.myScrollContainer = new ElementRef('scrollable');\n      this.messages = [];\n      this.toggleEncryption = false;\n      this.messages$ = this.service.messageStream.subscribe(message => {\n        console.log(message);\n        this.messages.push(message);\n      });\n      this.messageText = '';\n      window.onbeforeunload = () => this.ngOnDestroy();\n    }\n    ngOnInit() {\n      this.service.connect();\n    }\n    ngOnDestroy() {\n      console.log(`Destroy pozvan`);\n      this.service.disconnect();\n    }\n    ngAfterViewChecked() {\n      this.scrollToBottom();\n    }\n    scrollToBottom() {\n      try {\n        this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n      } catch (err) {}\n    }\n    sendMessage() {\n      this.service.sendMessage(this.messageText);\n      this.messageText = '';\n    }\n    static #_ = this.ɵfac = function ChatComponent_Factory(t) {\n      return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatComponent,\n      selectors: [[\"app-chat\"]],\n      viewQuery: function ChatComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myScrollContainer = _t.first);\n        }\n      },\n      decls: 14,\n      vars: 2,\n      consts: [[1, \"h-full\", \"bg-gray-700\"], [1, \"min-h-screen\", \"chat\", \"flex\", \"flex-col-reverse\"], [1, \"inner-chat\"], [\"scrollable\", \"\"], [1, \"chat-card\"], [1, \"h-full\", \"min-h-screen\"], [4, \"ngFor\", \"ngForOf\"], [1, \"input-poruke\", \"flex\", \"flex-row\"], [\"type\", \"text\", \"placeholder\", \"Poruka\", 1, \"w-full\", 3, \"ngModel\", \"keydown.enter\", \"ngModelChange\"], [\"type\", \"reset\", 1, \"bg-green-500\", \"mr-1\", \"ml-2\", 3, \"click\"], [1, \"bg-orange-500\", \"ml-1\", \"rounded-md\", 3, \"click\"], [\"class\", \"chat-msg-wrap sender\", 4, \"ngIf\", \"ngIfElse\"], [\"receiver\", \"\"], [1, \"chat-msg-wrap\", \"sender\"], [1, \"chat-msg\"], [2, \"margin-bottom\", \"0\"], [\"class\", \"bg-slate-400/25 rounded-md pl-1 pr-1\", \"style\", \"margin-bottom: 0;\", 4, \"ngIf\"], [1, \"bg-slate-400/25\", \"rounded-md\", \"pl-1\", \"pr-1\", 2, \"margin-bottom\", \"0\"], [1, \"chat-msg-wrap\", \"receiver\"], [1, \"text-sm\", \"bg-lime-600/25\", \"rounded-sm\", \"pl-1\", \"pr-1\"], [\"class\", \"bg-lime-800/50 rounded-md pl-1 pr-1\", \"style\", \"margin-bottom: 0;\", 4, \"ngIf\"], [1, \"bg-lime-800/50\", \"rounded-md\", \"pl-1\", \"pr-1\", 2, \"margin-bottom\", \"0\"]],\n      template: function ChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2, 3)(4, \"div\", 4);\n          i0.ɵɵelement(5, \"div\", 5);\n          i0.ɵɵtemplate(6, ChatComponent_div_6_Template, 4, 2, \"div\", 6);\n          i0.ɵɵelementStart(7, \"div\")(8, \"div\", 7)(9, \"input\", 8);\n          i0.ɵɵlistener(\"keydown.enter\", function ChatComponent_Template_input_keydown_enter_9_listener() {\n            return ctx.sendMessage();\n          })(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_9_listener($event) {\n            return ctx.messageText = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_10_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵtext(11, \" Po\\u0161alji \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_12_listener() {\n            return ctx.toggleEncryption = !ctx.toggleEncryption;\n          });\n          i0.ɵɵtext(13, \"Enkriptovan tekst\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.messageText);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".chat[_ngcontent-%COMP%]{background-color:#2a323e;padding:20px;border-radius:5px;box-shadow:0 2px 4px #0000001a;overflow:hidden}.inner-chat[_ngcontent-%COMP%]{position:relative;min-height:200px;max-height:600px;overflow-y:auto;overflow-x:hidden;padding:10px;margin-bottom:10px;border-radius:10px;box-shadow:0 2px 4px #0000001a}.chat-msg-wrap[_ngcontent-%COMP%]{width:100%;margin-bottom:10px}.chat-msg[_ngcontent-%COMP%]{width:-moz-fit-content;width:fit-content;border:1px solid #ccc;padding:10px;margin:5px;border-radius:8px;box-shadow:0 2px 4px #0000001a}.receiver[_ngcontent-%COMP%]{display:flex;justify-content:flex-start}.receiver[_ngcontent-%COMP%]   .chat-msg[_ngcontent-%COMP%]{background-color:#b8dfb5;color:#333}.sender[_ngcontent-%COMP%]{display:flex;justify-content:flex-end}.sender[_ngcontent-%COMP%]   .chat-msg[_ngcontent-%COMP%]{background-color:#d2effc;color:#333}.chat-card[_ngcontent-%COMP%]{background-color:#475569;border-radius:10px;padding:20px;box-shadow:0 4px 8px #0000001a}.input-poruke[_ngcontent-%COMP%]{display:flex;align-items:center}.mat-form-field[_ngcontent-%COMP%]{width:100%;margin-right:10px}button[type=reset][_ngcontent-%COMP%]{color:#fff;border-radius:5px;padding:10px 20px}.spinner[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}\"]\n    });\n  }\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}