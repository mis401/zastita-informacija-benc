{"ast":null,"code":"export class XTEA {\n  constructor() {\n    this.keyByteArray = Uint8Array.from(import.meta.env.NG_APP_XTEA_KEY.split(' ').map(char => parseInt(char)));\n    this.key = [];\n    this.delta = 0x9E3779B9;\n    console.log(this.keyByteArray);\n    for (let i = 0; i < 4; i++) {\n      console.log(parseInt(this.keyByteArray.slice(i * 4, i * 4 + 4).join('')));\n      const fourBytesArray = Uint32Array.from(this.keyByteArray.slice(i * 4, i * 4 + 4));\n      const fourBytes = fourBytesArray[0] << 24 | fourBytesArray[1] << 16 | fourBytesArray[2] << 8 | fourBytesArray[3];\n      console.log(fourBytes);\n      this.key.push(fourBytes);\n    }\n    console.log(this.key);\n  }\n  Encrypt(message) {\n    const blocks = this.Blockify(message);\n    let cyphertext = new Uint32Array(blocks.length);\n    let iv1 = 0;\n    let iv2 = 0;\n    return message;\n  }\n  Decrypt(message) {\n    return message;\n  }\n  encryptBlock(v0, v1, rounds) {\n    let sum = 0;\n    for (let i = 0; i < rounds; i++) {\n      v0 += (v1 << 4 ^ v1 >> 5) + v1 ^ sum + this.key[sum & 3];\n      sum += this.delta;\n      v1 += (v0 << 4 ^ v0 >> 5) + v0 ^ sum + this.key[sum >> 11 & 3];\n    }\n    return [v0, v1];\n  }\n}","map":{"version":3,"names":["XTEA","constructor","keyByteArray","Uint8Array","from","import","meta","env","NG_APP_XTEA_KEY","split","map","char","parseInt","key","delta","console","log","i","slice","join","fourBytesArray","Uint32Array","fourBytes","push","Encrypt","message","blocks","Blockify","cyphertext","length","iv1","iv2","Decrypt","encryptBlock","v0","v1","rounds","sum"],"sources":["C:\\Users\\MihajloBencun\\Desktop\\Faks\\Zastita informacija\\Prvi projekat\\zastita-informacija-benc\\Prvi projekat\\chat\\src\\app\\encryption\\XTEA.ts"],"sourcesContent":["import { IEncryption } from \"./IEncryption\";\r\n\r\nexport class XTEA implements IEncryption {\r\n    private keyByteArray = Uint8Array.from(import.meta.env.NG_APP_XTEA_KEY.split(' ').map((char) => parseInt(char)));\r\n    private key : number[] = []\r\n    private delta=0x9E3779B9;\r\n\r\n    constructor() {\r\n        console.log(this.keyByteArray);\r\n        for (let i = 0; i < 4; i++){\r\n            console.log(parseInt(this.keyByteArray.slice(i*4, i*4+4).join('')))\r\n            const fourBytesArray = Uint32Array.from(this.keyByteArray.slice(i*4, i*4+4));\r\n            const fourBytes = fourBytesArray[0] << 24 | fourBytesArray[1] << 16 | fourBytesArray[2] << 8 | fourBytesArray[3];\r\n            console.log(fourBytes)\r\n            this.key.push(fourBytes);\r\n        }\r\n        console.log(this.key)\r\n    }\r\n\r\n    public Encrypt(message: string) : string {\r\n        const blocks = this.Blockify(message);\r\n        let cyphertext = new Uint32Array(blocks.length);\r\n        let iv1 = 0;\r\n        let iv2 = 0;\r\n\r\n        return message;\r\n    }\r\n    public Decrypt(message: string): string {\r\n        return message;\r\n    }\r\n    \r\n    private encryptBlock(v0: number, v1: number, rounds: number) {\r\n        let sum = 0;\r\n        for (let i = 0; i < rounds; i++) {\r\n            v0 += (((v1 << 4) ^ (v1 >> 5)) + v1) ^ (sum + this.key[sum & 3]);\r\n            sum += this.delta;\r\n            v1 += (((v0 << 4) ^ (v0 >> 5)) + v0) ^ (sum + this.key[(sum >> 11) & 3]);\r\n        }\r\n        return [v0, v1];\r\n    }\r\n}"],"mappings":"AAEA,OAAM,MAAOA,IAAI;EAKbC,YAAA;IAJQ,KAAAC,YAAY,GAAGC,UAAU,CAACC,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,eAAe,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKC,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC;IACxG,KAAAE,GAAG,GAAc,EAAE;IACnB,KAAAC,KAAK,GAAC,UAAU;IAGpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,YAAY,CAAC;IAC9B,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;MACvBF,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC,IAAI,CAACV,YAAY,CAACgB,KAAK,CAACD,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;MACnE,MAAMC,cAAc,GAAGC,WAAW,CAACjB,IAAI,CAAC,IAAI,CAACF,YAAY,CAACgB,KAAK,CAACD,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC;MAC5E,MAAMK,SAAS,GAAGF,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,GAAGA,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,GAAGA,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGA,cAAc,CAAC,CAAC,CAAC;MAChHL,OAAO,CAACC,GAAG,CAACM,SAAS,CAAC;MACtB,IAAI,CAACT,GAAG,CAACU,IAAI,CAACD,SAAS,CAAC;;IAE5BP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,GAAG,CAAC;EACzB;EAEOW,OAAOA,CAACC,OAAe;IAC1B,MAAMC,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACF,OAAO,CAAC;IACrC,IAAIG,UAAU,GAAG,IAAIP,WAAW,CAACK,MAAM,CAACG,MAAM,CAAC;IAC/C,IAAIC,GAAG,GAAG,CAAC;IACX,IAAIC,GAAG,GAAG,CAAC;IAEX,OAAON,OAAO;EAClB;EACOO,OAAOA,CAACP,OAAe;IAC1B,OAAOA,OAAO;EAClB;EAEQQ,YAAYA,CAACC,EAAU,EAAEC,EAAU,EAAEC,MAAc;IACvD,IAAIC,GAAG,GAAG,CAAC;IACX,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,MAAM,EAAEnB,CAAC,EAAE,EAAE;MAC7BiB,EAAE,IAAK,CAAEC,EAAE,IAAI,CAAC,GAAKA,EAAE,IAAI,CAAE,IAAIA,EAAE,GAAKE,GAAG,GAAG,IAAI,CAACxB,GAAG,CAACwB,GAAG,GAAG,CAAC,CAAE;MAChEA,GAAG,IAAI,IAAI,CAACvB,KAAK;MACjBqB,EAAE,IAAK,CAAED,EAAE,IAAI,CAAC,GAAKA,EAAE,IAAI,CAAE,IAAIA,EAAE,GAAKG,GAAG,GAAG,IAAI,CAACxB,GAAG,CAAEwB,GAAG,IAAI,EAAE,GAAI,CAAC,CAAE;;IAE5E,OAAO,CAACH,EAAE,EAAEC,EAAE,CAAC;EACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}