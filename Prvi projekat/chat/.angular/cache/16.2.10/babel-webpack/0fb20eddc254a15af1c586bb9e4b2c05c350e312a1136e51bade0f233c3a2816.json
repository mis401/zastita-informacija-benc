{"ast":null,"code":"import { Subject, zip } from 'rxjs';\nimport { io } from 'socket.io-client';\nimport { selectId, selectUsername } from '../store/user.selector';\nimport { RC4 } from '../encryption/RC4';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let ChatService = /*#__PURE__*/(() => {\n  class ChatService {\n    constructor(store) {\n      this.store = store;\n      this.rc4 = new RC4();\n      this.userinfo$ = zip(this.store.select(selectUsername), this.store.select(selectId));\n      this.socket = io(import.meta.env.NG_APP_API_URL);\n      this.messageStream = new Subject();\n      this.username = null;\n      this.id = null;\n      this.userinfo$.subscribe(([username, id]) => {\n        this.username = username;\n        this.id = id;\n      });\n      this.socket.on('messageRec', crypto => {\n        const message = this.decryptMessage(crypto);\n        this.messageStream.next(message);\n      });\n    }\n    connect() {\n      this.socket.connect();\n    }\n    disconnect() {\n      this.socket.disconnect();\n    }\n    sendMessage(message) {\n      console.log(this.username);\n      console.log(this.id);\n      message = message.trim();\n      const crypto = this.encryptMessage(message);\n      const messageObject = {\n        text: message,\n        crypto: crypto,\n        owner: true,\n        senderName: this.username,\n        senderId: this.id\n      };\n      this.messageStream.next({\n        ...messageObject\n      });\n      messageObject.text = null;\n      this.socket.emit('message', messageObject);\n    }\n    encryptMessage(message) {\n      const crypto = this.rc4.Encrypt(message);\n      return crypto;\n    }\n    decryptMessage(cryptoMsg) {\n      const text = this.rc4.Encrypt(cryptoMsg.crypto);\n      const msg = {\n        text: text,\n        crypto: cryptoMsg.crypto,\n        owner: cryptoMsg.senderId === this.id,\n        senderName: cryptoMsg.senderName,\n        senderId: cryptoMsg.senderId\n      };\n      return msg;\n    }\n    static #_ = this.ɵfac = function ChatService_Factory(t) {\n      return new (t || ChatService)(i0.ɵɵinject(i1.Store));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ChatService,\n      factory: ChatService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ChatService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}