{"ast":null,"code":"export class RC4 {\n  constructor() {\n    this.S = null;\n  }\n  Encrypt(message) {\n    this.S = this.KSA(import.meta.env.NG_APP_SECRET);\n    console.log(`Pre PRGA S je ${this.S}`);\n    const coded = this.PRGA(message);\n    return coded;\n  }\n  Decrypt(message) {\n    return this.Encrypt(message);\n  }\n  KSA(key) {\n    console.log(`Radim KSA`);\n    let S = new Uint8Array(256);\n    for (let i = 0; i < 256; i++) {\n      S[i] = i;\n    }\n    let j = 0;\n    for (let i = 0; i < 256; i++) {\n      j = (j + S[i] + key.charCodeAt(i % key.length)) % 256;\n      let tmp = new Uint8Array(1);\n      tmp[0] = S[i];\n      S[i] = S[j];\n      S[j] = tmp[0];\n    }\n    console.log(`Na kraju KSA S je: ${S}`);\n    return S;\n  }\n  PRGA(message) {\n    let i = 0;\n    let j = 0;\n    if (!this.S) {\n      this.S = this.KSA(import.meta.env.NG_APP_SECRET);\n    }\n    let cipher = new Uint8Array(message.length);\n    let messageArray = message.split('').map(char => char.charCodeAt(0));\n    console.log(messageArray);\n    for (let n = 0; n < message.length; n++) {\n      i = (i + 1) % 256;\n      j = (j + this.S[i]) % 256;\n      let tmp = new Uint8Array(1);\n      tmp[0] = this.S[i];\n      this.S[i] = this.S[j];\n      this.S[j] = tmp[0];\n      let k = this.S[(this.S[i] + this.S[j]) % 256];\n      cipher[n] = messageArray[n] ^ k;\n    }\n    console.log(`byteMessage ${messageArray}`);\n    console.log(`coded ${cipher}`);\n    let codedArray = [];\n    for (let i = 0; i < cipher.length; i++) {\n      codedArray.push(String.fromCharCode(cipher[i]));\n    }\n    let coded = codedArray.join('');\n    return coded;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}