{"ast":null,"code":"export class XTEA {\n  constructor() {\n    this.keyByteArray = Uint8Array.from(import.meta.env.NG_APP_XTEA_KEY.split(' ').map(char => parseInt(char)));\n    this.key = [];\n    this.delta = 0x9E3779B9;\n    for (let i = 0; i < 4; i++) {\n      const fourBytes = Uint32Array.from([parseInt(this.keyByteArray.slice(i * 4, i * 4 + 4).join(''))]);\n      this.key.push(fourBytes);\n    }\n    console.log(this.key);\n  }\n  Encrypt(message) {\n    this.Blockify(message);\n    return \"prosao blockify\";\n  }\n  Decrypt(message) {\n    return message;\n  }\n  Blockify(message) {\n    const txtEncoder = new TextEncoder();\n    let messageInBytes = txtEncoder.encode(message);\n    let paddedMessage = messageInBytes;\n    const paddingRequired = messageInBytes.length % 8;\n    if (paddingRequired) {\n      const paddingBytes = new Uint8Array(paddingRequired);\n      paddingBytes.fill(paddingRequired);\n      paddedMessage = new Uint8Array([...messageInBytes, ...paddingBytes]);\n    }\n    let blocks = [];\n    for (let i = 0; i < paddedMessage.length; i += 8) {\n      const block = parseInt(paddedMessage.slice(i, i + 8).join(''));\n      blocks.push(block);\n      console.log(block);\n    }\n    return blocks;\n  }\n}","map":{"version":3,"names":["XTEA","constructor","keyByteArray","Uint8Array","from","import","meta","env","NG_APP_XTEA_KEY","split","map","char","parseInt","key","delta","i","fourBytes","Uint32Array","slice","join","push","console","log","Encrypt","message","Blockify","Decrypt","txtEncoder","TextEncoder","messageInBytes","encode","paddedMessage","paddingRequired","length","paddingBytes","fill","blocks","block"],"sources":["C:\\Users\\MihajloBencun\\Desktop\\Faks\\Zastita informacija\\Prvi projekat\\zastita-informacija-benc\\Prvi projekat\\chat\\src\\app\\encryption\\XTEA.ts"],"sourcesContent":["import { IEncryption } from \"./IEncryption\";\r\n\r\nexport class XTEA implements IEncryption {\r\n    private keyByteArray = Uint8Array.from(import.meta.env.NG_APP_XTEA_KEY.split(' ').map((char) => parseInt(char)));\r\n    private key : Uint32Array[] = []\r\n    private delta=0x9E3779B9;\r\n\r\n    constructor() {\r\n        for (let i = 0; i < 4; i++){\r\n            const fourBytes = Uint32Array.from([parseInt(this.keyByteArray.slice(i*4, i*4+4).join(''))]);\r\n            this.key.push(fourBytes);\r\n        }\r\n        console.log(this.key)\r\n    }\r\n\r\n    public Encrypt(message: string): string {\r\n        this.Blockify(message);\r\n        return \"prosao blockify\"\r\n    }\r\n    public Decrypt(message: string): string {\r\n        return message;\r\n    }\r\n    private Blockify(message: string) {\r\n        const txtEncoder = new TextEncoder();\r\n        let messageInBytes = txtEncoder.encode(message);\r\n        let paddedMessage = messageInBytes;\r\n        const paddingRequired = messageInBytes.length % 8;\r\n        if (paddingRequired){\r\n            const paddingBytes = new Uint8Array(paddingRequired);\r\n            paddingBytes.fill(paddingRequired)\r\n            paddedMessage = new Uint8Array([...messageInBytes, ...paddingBytes]);\r\n        }\r\n        let blocks = [];\r\n        for (let i = 0; i < paddedMessage.length; i += 8) {\r\n            const block = parseInt((paddedMessage.slice(i, i + 8)).join(''));\r\n            blocks.push(block);\r\n            console.log(block);\r\n        }\r\n        return blocks;\r\n    }\r\n\r\n}"],"mappings":"AAEA,OAAM,MAAOA,IAAI;EAKbC,YAAA;IAJQ,KAAAC,YAAY,GAAGC,UAAU,CAACC,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,eAAe,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKC,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC;IACxG,KAAAE,GAAG,GAAmB,EAAE;IACxB,KAAAC,KAAK,GAAC,UAAU;IAGpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;MACvB,MAAMC,SAAS,GAAGC,WAAW,CAACb,IAAI,CAAC,CAACQ,QAAQ,CAAC,IAAI,CAACV,YAAY,CAACgB,KAAK,CAACH,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC5F,IAAI,CAACN,GAAG,CAACO,IAAI,CAACJ,SAAS,CAAC;;IAE5BK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,GAAG,CAAC;EACzB;EAEOU,OAAOA,CAACC,OAAe;IAC1B,IAAI,CAACC,QAAQ,CAACD,OAAO,CAAC;IACtB,OAAO,iBAAiB;EAC5B;EACOE,OAAOA,CAACF,OAAe;IAC1B,OAAOA,OAAO;EAClB;EACQC,QAAQA,CAACD,OAAe;IAC5B,MAAMG,UAAU,GAAG,IAAIC,WAAW,EAAE;IACpC,IAAIC,cAAc,GAAGF,UAAU,CAACG,MAAM,CAACN,OAAO,CAAC;IAC/C,IAAIO,aAAa,GAAGF,cAAc;IAClC,MAAMG,eAAe,GAAGH,cAAc,CAACI,MAAM,GAAG,CAAC;IACjD,IAAID,eAAe,EAAC;MAChB,MAAME,YAAY,GAAG,IAAI/B,UAAU,CAAC6B,eAAe,CAAC;MACpDE,YAAY,CAACC,IAAI,CAACH,eAAe,CAAC;MAClCD,aAAa,GAAG,IAAI5B,UAAU,CAAC,CAAC,GAAG0B,cAAc,EAAE,GAAGK,YAAY,CAAC,CAAC;;IAExE,IAAIE,MAAM,GAAG,EAAE;IACf,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgB,aAAa,CAACE,MAAM,EAAElB,CAAC,IAAI,CAAC,EAAE;MAC9C,MAAMsB,KAAK,GAAGzB,QAAQ,CAAEmB,aAAa,CAACb,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAEI,IAAI,CAAC,EAAE,CAAC,CAAC;MAChEiB,MAAM,CAAChB,IAAI,CAACiB,KAAK,CAAC;MAClBhB,OAAO,CAACC,GAAG,CAACe,KAAK,CAAC;;IAEtB,OAAOD,MAAM;EACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}